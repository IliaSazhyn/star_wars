{"version":3,"sources":["components/FilmDetails/index.js"],"names":["FilmDetails","useState","details","setDetails","film","setFilm","setVehicle","isLoading","setLoading","isError","setError","location","useLocation","history","useHistory","fetchData","a","movieId","pathname","characterNames","planetsNames","speciesNames","starshipsNames","vehiclesNames","axios","get","movie","data","charactersLinks","characters","map","link","charactersData","all","then","value","forEach","val","push","name","planetsLinks","planets","planetsData","speciesLinks","species","speciesData","starshipsLinks","starships","starshipsData","vehiclesLinks","vehicles","vehiclesData","useEffect","catch","e","message","Object","values","console","log","fluid","color","onClick","goBack","Body","Title","title","Text","producer","director","className"],"mappings":"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","file":"static/js/4.03db063c.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst FilmDetails = () => {\r\n  const [details, setDetails] = useState([]);\r\n  const [film, setFilm] = useState([]);\r\n  const [vehicle, setVehicle] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isError, setError] = useState(null);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const movieId = location.pathname;\r\n\r\n    let characterNames = [];\r\n    let planetsNames = [];\r\n    let speciesNames = [];\r\n    let starshipsNames = [];\r\n    let vehiclesNames = [];\r\n\r\n    const movie = await axios.get(`https://swapi.dev/api${movieId}`);\r\n    const { data } = movie;\r\n\r\n    // This set all details in state\r\n\r\n    // This is character action\r\n    const charactersLinks = [...data.characters];\r\n    const charactersData = await charactersLinks.map((link) => axios.get(link));\r\n    axios.all(charactersData).then((value) =>\r\n      value.forEach((val) => {\r\n        characterNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is planets action\r\n    const planetsLinks = [...data.planets];\r\n    const planetsData = await planetsLinks.map((link) => axios.get(link));\r\n    axios.all(planetsData).then((value) =>\r\n      value.forEach((val) => {\r\n        // let temp = val.data.name.slice();\r\n        planetsNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is species action\r\n    const speciesLinks = [...data.species];\r\n    const speciesData = await speciesLinks.map((link) => axios.get(link));\r\n    axios.all(speciesData).then((value) =>\r\n      value.forEach((val) => {\r\n        speciesNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is starship action\r\n    const starshipsLinks = [...data.starships];\r\n    const starshipsData = await starshipsLinks.map((link) => axios.get(link));\r\n    axios.all(starshipsData).then((value) =>\r\n      value.forEach((val) => {\r\n        starshipsNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is vehicles action\r\n    const vehiclesLinks = [...data.vehicles];\r\n    const vehiclesData = await vehiclesLinks.map((link) => axios.get(link));\r\n    axios.all(vehiclesData).then((value) =>\r\n      value.forEach((val) => {\r\n        vehiclesNames.push(val.data.name);\r\n      })\r\n    );\r\n    setFilm({\r\n      speciesNames,\r\n      vehiclesNames,\r\n      starshipsNames,\r\n      characterNames,\r\n      planetsNames,\r\n    });\r\n    setVehicle(vehiclesNames);\r\n    setDetails(data);\r\n  };\r\n  useEffect(() => {\r\n    // This fetch data from API\r\n    fetchData()\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setError(e.message);\r\n      });\r\n  }, []);\r\n  // console.log(film[\"characterNames\"]);\r\n\r\n  // console.log(film);\r\n\r\n  //  if(!isLoading) {\r\n  //   character.map((movie, index) => (\r\n  //   console.log(movie.episode_id)\r\n  // ))\r\n  // }\r\n  if (!isLoading) {\r\n\r\n    Object.values(film).map((value) =>\r\n      value.forEach(function (val) {\r\n        console.log(val)\r\n      })\r\n    );\r\n  }\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <div>\r\n            {isLoading ? (\r\n              <div>Loading...</div>\r\n            ) : (\r\n              <div>\r\n                {Object.values(film).map((value) =>\r\n                  value.forEach(function (val) {\r\n                    <p>{val}</p>;\r\n                  })\r\n                )}\r\n                <Button color=\"primary\" onClick={() => history.goBack()}>\r\n                  Back\r\n                </Button>\r\n\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Title>{details.title}</Card.Title>\r\n                    <Card.Text>Producer: {details.producer}</Card.Text>\r\n                    <Card.Text>Director: {details.director}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem>Cras justo odio</ListGroupItem>\r\n                    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n                    <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                  </ListGroup>\r\n                </Card>\r\n              </div>\r\n            )}\r\n            {/* { Object.values(film).map((value, index) => (\r\n                <div key={index}>{value}</div>\r\n              )) } */}\r\n\r\n            {isError && <div>Somethin went wrong{isError}</div>}\r\n\r\n            {/* {film && film[\"characterNames\"].map ((person, id) => (\r\n    <p key={id}>{person}</p>\r\n  ))}    */}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FilmDetails;\r\n"],"sourceRoot":""}