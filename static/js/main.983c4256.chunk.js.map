{"version":3,"sources":["components/Main/index.js","components/FilmDetails/index.js","App.js","index.js"],"names":["Main","useState","movies","setMovies","loading","setLoading","filterText","setFilterText","history","useHistory","getMovies","a","axios","get","response","sortFilms","data","results","map","i","sort","b","title","localeCompare","alert","useEffect","isSubscribed","filteredItems","filter","item","toLocaleLowerCase","includes","itemsShow","Container","fluid","className","Col","Row","Spinner","animation","role","InputGroup","FormControl","placeholder","type","value","onChange","e","target","movie","index","md","ListGroupItem","action","onClick","url","id","episode_id","localStorage","setItem","JSON","stringify","push","opening_crawl","FilmDetails","details","setDetails","vehicles","setVehicles","starships","setStarships","characters","setCharacters","planets","setPlanets","species","setSpecies","isLoading","isError","setError","fetchData","parse","getItem","movieId","replaceUrl","replace","fetchCharacters","fetchPlanets","fetchSpecies","fetchStarships","fetchVehicles","charactersLinks","Promise","all","fetch","then","responses","res","text","texts","console","log","vehiclesLinks","planetsLinks","speciesLinks","starshipsLinks","catch","message","Button","color","goBack","Card","Body","Title","Text","producer","director","Accordion","defaultActiveKey","Header","Toggle","as","variant","eventKey","Collapse","ListGroup","person","name","Page404","style","textAlign","App","exact","path","component","ReactDOM","render","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.983c4256.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Spinner,\r\n  InputGroup,\r\n  FormControl,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\nimport \"./index.css\";\r\n\r\nconst Main = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [filterText, setFilterText] = useState(\"\");\r\n  const history = useHistory();\r\n  \r\n  const getMovies = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await axios.get(\"https://swapi.dev/api/films/\");\r\n      let sortFilms = response.data.results.map((i) => ({ ...i }));\r\n      sortFilms.sort((a, b) => a.title.localeCompare(b.title));\r\n\r\n      setMovies(sortFilms);\r\n      setLoading(false);\r\n\r\n      return response.data.results;\r\n    } catch (error) {\r\n      alert(`Throwing ${error}`);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    if (isSubscribed) {\r\n      getMovies();\r\n    }\r\n    return () => (isSubscribed = false);\r\n  }, []);\r\n\r\n  const filteredItems = movies.filter((item) =>\r\n    item.title.toLocaleLowerCase().includes(filterText)\r\n  );\r\n\r\n  const itemsShow = filterText ? filteredItems : movies;\r\n\r\n  const onClickHandler = (url, id) => {\r\n    localStorage.setItem(\"url\", JSON.stringify(url));\r\n    history.push(\"/films/\" + id);\r\n  };\r\n  return (\r\n    <Container fluid className=\"Main_wrapper\">\r\n      <Col>\r\n        <Row>\r\n          {loading && (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"sr-only\">Loading...</span>\r\n            </Spinner>\r\n          )}\r\n        </Row>\r\n        <Row className=\"Main_search_wrapper\">\r\n          <InputGroup className=\"m-5 Main_search\">\r\n            <FormControl\r\n              placeholder=\"Enter keyword to filter\"\r\n              type=\"text\"\r\n              value={filterText}\r\n              onChange={(e) =>\r\n                setFilterText(e.target.value.toLocaleLowerCase())\r\n              }\r\n            />\r\n          </InputGroup>\r\n        </Row>\r\n        <Row>\r\n          {itemsShow.map((movie, index) => (\r\n            <Col md=\"6\" key={index}>\r\n              <ListGroupItem\r\n                className=\"Main_header\"\r\n                action\r\n                onClick={() => {\r\n                  onClickHandler(movie.url, movie.episode_id);\r\n                }}\r\n              >\r\n                <h3>{movie.title}</h3>\r\n              </ListGroupItem>\r\n              <p>{movie.opening_crawl}</p>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./index.css\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  Accordion,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nconst FilmDetails = () => {\r\n  const [details, setDetails] = useState([]);\r\n\r\n  const [vehicles, setVehicles] = useState([]);\r\n  const [starships, setStarships] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [planets, setPlanets] = useState([]);\r\n  const [species, setSpecies] = useState([]);\r\n\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isError, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const movieId = await JSON.parse(localStorage.getItem(\"url\"));\r\n    let replaceUrl = movieId.replace('http','https');\r\n\r\n    const movie = await axios.get(`${replaceUrl}`);\r\n    const { data } = movie;\r\n\r\n    // This set all details in state\r\n\r\n    // This is character action\r\n    const charactersLinks = [...data.characters];\r\n\r\n    fetchCharacters(charactersLinks);\r\n    // This is planet action\r\n    const planetsLinks = [...data.planets];\r\n    fetchPlanets(planetsLinks);\r\n    // This is species action\r\n    const speciesLinks = [...data.species];\r\n    fetchSpecies(speciesLinks);\r\n\r\n    // This is starship action\r\n    const starshipsLinks = [...data.starships];\r\n    fetchStarships(starshipsLinks);\r\n\r\n    // This is vehicles action\r\n    const vehiclesLinks = [...data.vehicles];\r\n    fetchVehicles(vehiclesLinks);\r\n\r\n    setDetails(data);\r\n  };\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n    // This fetch data from API\r\n      isSubscribed && \r\n      fetchData()\r\n\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setError(e.message);\r\n      });\r\n      return () => (isSubscribed = false)\r\n  }, []);\r\n\r\n  function fetchCharacters(charactersLinks) {\r\n    let replaceUrl;\r\n    Promise.all(charactersLinks.map((url) => \r\n\r\n      \r\n      \r\n    \r\n      \r\n      fetch(url.replace('http','https'))))\r\n      .then((responses) => Promise.all(responses.map((res) => res.text())))\r\n      .then((texts) => {\r\n        setCharacters(texts.map(JSON.parse));\r\n      });\r\n      console.log(replaceUrl)\r\n  }\r\n  function fetchVehicles(vehiclesLinks) {\r\n    Promise.all(vehiclesLinks.map((url) => fetch(url)))\r\n      .then((responses) => Promise.all(responses.map((res) => res.text())))\r\n      .then((texts) => {\r\n        setVehicles(texts.map(JSON.parse));\r\n      });\r\n  }\r\n  function fetchPlanets(planetsLinks) {\r\n    Promise.all(planetsLinks.map((url) => fetch(url)))\r\n      .then((responses) => Promise.all(responses.map((res) => res.text())))\r\n      .then((texts) => {\r\n        setPlanets(texts.map(JSON.parse));\r\n      });\r\n  }\r\n  function fetchSpecies(speciesLinks) {\r\n    Promise.all(speciesLinks.map((url) => fetch(url)))\r\n      .then((responses) => Promise.all(responses.map((res) => res.text())))\r\n      .then((texts) => {\r\n        setSpecies(texts.map(JSON.parse));\r\n      });\r\n  }\r\n  function fetchStarships(starshipsLinks) {\r\n    Promise.all(starshipsLinks.map((url) => fetch(url)))\r\n      .then((responses) => Promise.all(responses.map((res) => res.text())))\r\n      .then((texts) => {\r\n        setStarships(texts.map(JSON.parse));\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"Details_wrapper\">\r\n        <Col>\r\n          <div className=\"Details_card_container\">\r\n            {isLoading ? (\r\n              <Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            ) : (\r\n              <div className=\"Details_card_body\">\r\n                <Button\r\n                  className=\"Details_button\"\r\n                  color=\"primary\"\r\n                  onClick={() => history.goBack()}\r\n                >\r\n                  Back\r\n                </Button>\r\n\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Title>{details.title}</Card.Title>\r\n                    <Card.Text>Producer: {details.producer}</Card.Text>\r\n                    <Card.Text>Director: {details.director}</Card.Text>\r\n                  </Card.Body>\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"1\"\r\n                        >\r\n                          Characters:\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"1\">\r\n                        <ListGroup>\r\n                          {characters &&\r\n                            characters.map((person, id) => (\r\n                              <ListGroupItem key={id}>\r\n                                {person.name}\r\n                              </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"2\"\r\n                        >\r\n                          Planets:\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"2\">\r\n                        <ListGroup>\r\n                          {planets &&\r\n                            planets.map((item, id) => (\r\n                              <ListGroupItem key={id}>\r\n                                {item.name}\r\n                              </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"3\"\r\n                        >\r\n                          Vehicles:\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"3\">\r\n                        <ListGroup>\r\n                          {vehicles &&\r\n                            vehicles.map((item, id) => (\r\n                              <ListGroupItem key={id}>\r\n                                {item.name}\r\n                              </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"4\"\r\n                        >\r\n                          Starships:\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"4\">\r\n                        <ListGroup>\r\n                          {starships &&\r\n                            starships.map((item, id) => (\r\n                              <ListGroupItem key={id}>\r\n                                {item.name}\r\n                              </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n\r\n                  <Accordion defaultActiveKey=\"0\">\r\n                    <Card>\r\n                      <Card.Header>\r\n                        <Accordion.Toggle\r\n                          as={Button}\r\n                          variant=\"link\"\r\n                          eventKey=\"5\"\r\n                        >\r\n                          Species:\r\n                        </Accordion.Toggle>\r\n                      </Card.Header>\r\n                      <Accordion.Collapse eventKey=\"5\">\r\n                        <ListGroup>\r\n                          {species &&\r\n                            species.map((item, id) => (\r\n                              <ListGroupItem key={id}>\r\n                                {item.name}\r\n                              </ListGroupItem>\r\n                            ))}\r\n                        </ListGroup>\r\n                      </Accordion.Collapse>\r\n                    </Card>\r\n                  </Accordion>\r\n                </Card>\r\n              </div>\r\n            )}\r\n\r\n            {isError && <div>Somethin went wrong{isError}</div>}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FilmDetails;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Main from \"./components/Main/index\";\r\nimport FilmDetails from \"./components/FilmDetails/index\";\r\nconst Page404 = () => (\r\n  <h1 style={{ textAlign: \"center\" }}> Error 404, Not found... </h1>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route exact path=\"/films/:id\" component={FilmDetails} />\r\n        <Route component={Page404} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./styles/main.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}