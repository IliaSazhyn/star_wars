[{"C:\\projects\\Maksimillian_React\\star_wars\\src\\index.js":"1","C:\\projects\\Maksimillian_React\\star_wars\\src\\components\\FilmDetails\\index.js":"2","C:\\projects\\Maksimillian_React\\star_wars\\src\\components\\Main\\index.js":"3","C:\\projects\\Maksimillian_React\\star_wars\\src\\App.js":"4"},{"size":296,"mtime":1611964982980,"results":"5","hashOfConfig":"6"},{"size":4844,"mtime":1611964982379,"results":"7","hashOfConfig":"6"},{"size":1510,"mtime":1611964982380,"results":"8","hashOfConfig":"6"},{"size":671,"mtime":1611964982378,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"2xq4td",{"filePath":"13","messages":"14","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"C:\\projects\\Maksimillian_React\\star_wars\\src\\index.js",[],["20","21"],"C:\\projects\\Maksimillian_React\\star_wars\\src\\components\\FilmDetails\\index.js",["22","23"],"import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n} from \"react-bootstrap\";\r\n\r\nconst FilmDetails = () => {\r\n  const [details, setDetails] = useState([]);\r\n  const [film, setFilm] = useState([]);\r\n  const [vehicle, setVehicle] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isError, setError] = useState(null);\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    const movieId = location.pathname;\r\n\r\n    let characterNames = [];\r\n    let planetsNames = [];\r\n    let speciesNames = [];\r\n    let starshipsNames = [];\r\n    let vehiclesNames = [];\r\n\r\n    const movie = await axios.get(`https://swapi.dev/api${movieId}`);\r\n    const { data } = movie;\r\n\r\n    // This set all details in state\r\n\r\n    // This is character action\r\n    const charactersLinks = [...data.characters];\r\n    const charactersData = await charactersLinks.map((link) => axios.get(link));\r\n    axios.all(charactersData).then((value) =>\r\n      value.forEach((val) => {\r\n        characterNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is planets action\r\n    const planetsLinks = [...data.planets];\r\n    const planetsData = await planetsLinks.map((link) => axios.get(link));\r\n    axios.all(planetsData).then((value) =>\r\n      value.forEach((val) => {\r\n        // let temp = val.data.name.slice();\r\n        planetsNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is species action\r\n    const speciesLinks = [...data.species];\r\n    const speciesData = await speciesLinks.map((link) => axios.get(link));\r\n    axios.all(speciesData).then((value) =>\r\n      value.forEach((val) => {\r\n        speciesNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is starship action\r\n    const starshipsLinks = [...data.starships];\r\n    const starshipsData = await starshipsLinks.map((link) => axios.get(link));\r\n    axios.all(starshipsData).then((value) =>\r\n      value.forEach((val) => {\r\n        starshipsNames.push(val.data.name);\r\n      })\r\n    );\r\n    // This is vehicles action\r\n    const vehiclesLinks = [...data.vehicles];\r\n    const vehiclesData = await vehiclesLinks.map((link) => axios.get(link));\r\n    axios.all(vehiclesData).then((value) =>\r\n      value.forEach((val) => {\r\n        vehiclesNames.push(val.data.name);\r\n      })\r\n    );\r\n    setFilm({\r\n      speciesNames,\r\n      vehiclesNames,\r\n      starshipsNames,\r\n      characterNames,\r\n      planetsNames,\r\n    });\r\n    setVehicle(vehiclesNames);\r\n    setDetails(data);\r\n  };\r\n  useEffect(() => {\r\n    // This fetch data from API\r\n    fetchData()\r\n      .then(() => {\r\n        setLoading(false);\r\n      })\r\n      .catch((e) => {\r\n        setError(e.message);\r\n      });\r\n  }, []);\r\n  // console.log(film[\"characterNames\"]);\r\n\r\n  // console.log(film);\r\n\r\n  //  if(!isLoading) {\r\n  //   character.map((movie, index) => (\r\n  //   console.log(movie.episode_id)\r\n  // ))\r\n  // }\r\n  if (!isLoading) {\r\n\r\n    Object.values(film).map((value) =>\r\n      value.forEach(function (val) {\r\n        console.log(val)\r\n      })\r\n    );\r\n  }\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col>\r\n          <div>\r\n            {isLoading ? (\r\n              <div>Loading...</div>\r\n            ) : (\r\n              <div>\r\n                {Object.values(film).map((value) =>\r\n                  value.forEach(function (val) {\r\n                    <p>{val}</p>;\r\n                  })\r\n                )}\r\n                <Button color=\"primary\" onClick={() => history.goBack()}>\r\n                  Back\r\n                </Button>\r\n\r\n                <Card>\r\n                  <Card.Body>\r\n                    <Card.Title>{details.title}</Card.Title>\r\n                    <Card.Text>Producer: {details.producer}</Card.Text>\r\n                    <Card.Text>Director: {details.director}</Card.Text>\r\n                  </Card.Body>\r\n                  <ListGroup className=\"list-group-flush\">\r\n                    <ListGroupItem>Cras justo odio</ListGroupItem>\r\n                    <ListGroupItem>Dapibus ac facilisis in</ListGroupItem>\r\n                    <ListGroupItem>Vestibulum at eros</ListGroupItem>\r\n                  </ListGroup>\r\n                </Card>\r\n              </div>\r\n            )}\r\n            {/* { Object.values(film).map((value, index) => (\r\n                <div key={index}>{value}</div>\r\n              )) } */}\r\n\r\n            {isError && <div>Somethin went wrong{isError}</div>}\r\n\r\n            {/* {film && film[\"characterNames\"].map ((person, id) => (\r\n    <p key={id}>{person}</p>\r\n  ))}    */}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FilmDetails;\r\n","C:\\projects\\Maksimillian_React\\star_wars\\src\\components\\Main\\index.js",[],"C:\\projects\\Maksimillian_React\\star_wars\\src\\App.js",[],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":17,"column":10,"nodeType":"30","messageId":"31","endLine":17,"endColumn":17},{"ruleId":"32","severity":1,"message":"33","line":98,"column":6,"nodeType":"34","endLine":98,"endColumn":8,"suggestions":"35"},"no-native-reassign",["36"],"no-negated-in-lhs",["37"],"no-unused-vars","'vehicle' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["38"],"no-global-assign","no-unsafe-negation",{"desc":"39","fix":"40"},"Update the dependencies array to be: [fetchData]",{"range":"41","text":"42"},[2909,2911],"[fetchData]"]